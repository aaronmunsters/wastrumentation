[
  {
    "input_program": {
      "path": "./input-programs/wat/add_three.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_stack.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls",
              "result": {
                "I32": 0
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "max_call_depth",
              "result": {
                "I32": 0
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_applys",
              "result": {
                "I32": 1
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "max_apply_depth",
              "result": {
                "I32": 1
              }
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 1
        },
        {
          "I32": 2
        },
        {
          "I32": 3
        }
      ],
      "input_entry_point": "add_three",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 6
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/fib.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_stack.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls",
              "result": {
                "I32": 176
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "max_call_depth",
              "result": {
                "I32": 9
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_applys",
              "result": {
                "I32": 177
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "max_apply_depth",
              "result": {
                "I32": 10
              }
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 10
        }
      ],
      "input_entry_point": "fib",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 89
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/different_signatures.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/signatures_check.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "all_expectations_met",
              "result": {
                "I32": 1
              }
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [],
      "input_entry_point": "execute_tests",
      "post_execution_assertions": [],
      "results": []
    }
  },
  {
    "input_program": {
      "path": "./input-programs/assemblyscript/controlflow-recursive.ts",
      "type": "AssemblyScript"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_stack.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls",
              "result": {
                "I32": 981956
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "max_call_depth",
              "result": {
                "I32": 255
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_applys",
              "result": {
                "I32": 981957
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "max_apply_depth",
              "result": {
                "I32": 256
              }
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [],
      "input_entry_point": "execute_tests",
      "post_execution_assertions": [],
      "results": []
    }
  },
  {
    "input_program": {
      "path": "./input-programs/assemblyscript/simply_return.ts",
      "type": "AssemblyScript"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/set_arg_ret_to_zero.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 0
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 10
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/if-then-else-simple.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/if-then-else-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 2
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 0
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/if-then-else-simple.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/if-then-else-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 1
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 1
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 2
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/if-then-else-2-times.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/if-then-else-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 4400110
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 4401001
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/if-then-simple.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/if-then-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 2
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 0
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/if-then-simple.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/if-then-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 1
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 1
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 2
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/br-if-to-blocks.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/branch-if-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 101
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 111
        }
      ],
      "input_entry_point": "if-label",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 100
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/br-if-to-blocks.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/branch-if-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 100
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 222
        }
      ],
      "input_entry_point": "if-label",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 101
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/br-if-to-blocks.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/branch-if-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 100
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 333
        }
      ],
      "input_entry_point": "if-label",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 111
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 0
        },
        {
          "I32": 10
        },
        {
          "I32": 5
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 15
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 1
        },
        {
          "I32": 10
        },
        {
          "I32": 5
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 5
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 2
        },
        {
          "I32": 10
        },
        {
          "I32": 5
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 50
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_chain.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_chain_before_after.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls_before",
              "result": {
                "I32": 5
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls_after",
              "result": {
                "I32": 5
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_apply_before",
              "result": {
                "I32": 6
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_apply_after",
              "result": {
                "I32": 6
              }
            }
          }
        ]
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_chain_before.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls_before",
              "result": {
                "I32": 5
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls_after",
              "result": {
                "I32": 0
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_apply_before",
              "result": {
                "I32": 6
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_apply_after",
              "result": {
                "I32": 6
              }
            }
          }
        ]
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_chain_after.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls_before",
              "result": {
                "I32": 0
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_calls_after",
              "result": {
                "I32": 5
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_apply_before",
              "result": {
                "I32": 6
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_apply_after",
              "result": {
                "I32": 6
              }
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": []
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/br-table.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/br-table-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 1
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 0
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 0
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/br-table.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/br-table-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 2
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 1
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/br-table.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/br-table-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": -1
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 2
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 2
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/br-table.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/br-table-alter.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 5
        }
      ],
      "input_entry_point": "main",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": -1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/nested-blocks.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/block.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_blocks_before",
              "result": {
                "I32": 14
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_block_after",
              "result": {
                "I32": 14
              }
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [],
      "input_entry_point": "nested-blocks",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/nested-loops.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/loop.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "GlobalValueEquals": {
              "identifier": "number_of_loops_before",
              "result": {
                "I32": 14
              }
            }
          },
          {
            "GlobalValueEquals": {
              "identifier": "number_of_loop_after",
              "result": {
                "I32": 14
              }
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [],
      "input_entry_point": "nested-loops",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/select.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/select-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 111
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 111
        },
        {
          "I32": 999
        },
        {
          "I32": 0
        }
      ],
      "input_entry_point": "select",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 999
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/select.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/forward.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      },
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/select-alter.wasp"
        },
        "input_program_assertion": {
          "DifferentReturnValue": [
            {
              "I32": 999
            }
          ]
        },
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 111
        },
        {
          "I32": 999
        },
        {
          "I32": 1
        }
      ],
      "input_entry_point": "select",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 111
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 2
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 3
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 3
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 4
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 4
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 5
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 1
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 12
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 7
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 13
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 5
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 14
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 2
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 15
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 3
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/call_indirect_wast.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Wasp": "./analyses/wasp-as/call_indirect.wasp"
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": []
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 16
        }
      ],
      "input_entry_point": "check_t0",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 6
        }
      ]
    }
  },
  {
    "input_program": {
      "path": "./input-programs/wat/add_three.wat",
      "type": "Wat"
    },
    "instrumented_assertions": [
      {
        "analysis": {
          "Rust": {
            "hooks": [
              "advice-call-before",
              "advice-call-after",
              "advice-apply"
            ],
            "manifest": "./tests/analyses/rust/call-stack/Cargo.toml"
          }
        },
        "input_program_assertion": "EqualToUninstrumented",
        "post_execution_assertions": [
          {
            "CallYields": {
              "arguments": [],
              "call": "get_number_of_calls",
              "results": [
                {
                  "I32": 0
                }
              ]
            }
          },
          {
            "CallYields": {
              "arguments": [],
              "call": "get_max_call_depth",
              "results": [
                {
                  "I32": 0
                }
              ]
            }
          },
          {
            "CallYields": {
              "arguments": [],
              "call": "get_number_of_applies",
              "results": [
                {
                  "I32": 1
                }
              ]
            }
          },
          {
            "CallYields": {
              "arguments": [],
              "call": "get_max_apply_depth",
              "results": [
                {
                  "I32": 1
                }
              ]
            }
          }
        ]
      }
    ],
    "uninstrumented_assertion": {
      "arguments": [
        {
          "I32": 1
        },
        {
          "I32": 2
        },
        {
          "I32": 3
        }
      ],
      "input_entry_point": "add_three",
      "post_execution_assertions": [],
      "results": [
        {
          "I32": 6
        }
      ]
    }
  }
]
